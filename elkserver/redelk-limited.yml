#
# Part of RedELK
# Docker compose config for limited RedELK install
#
# Authors:
# - Outflank B.V. / Marc Smeets
# - Lorenzo Bernardi (@fastlorenzo)
#


version: "3.3"

networks:
  net:
    driver: bridge

volumes:
  es_data:
    driver: local
  kibana_data:
    driver: local

services:
  elasticsearch:
    container_name: redelk-elasticsearch
    image: ${REDELKREPO}/redelk-elasticsearch:${REDELKVERSION}
    networks:
      - net
    ports:
      - "127.0.0.1:9200:9200"
    expose:
      - "9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
      - ./mounts/certs:${CERTS_DIR_ES}
    environment:
      - discovery.type=single-node
      - cluster.name=redelk-cluster
      - node.name=redelk-node1
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=${ES_JAVA_OPTS}
      - xpack.license.self_generated.type=basic
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=${CERTS_DIR_ES}/redelk-elasticsearch/redelk-elasticsearch.key
      - xpack.security.http.ssl.certificate_authorities=${CERTS_DIR_ES}/ca/ca.crt
      - xpack.security.http.ssl.certificate=${CERTS_DIR_ES}/redelk-elasticsearch/redelk-elasticsearch.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.certificate_authorities=${CERTS_DIR_ES}/ca/ca.crt
      - xpack.security.transport.ssl.certificate=${CERTS_DIR_ES}/redelk-elasticsearch/redelk-elasticsearch.crt
      - xpack.security.transport.ssl.key=${CERTS_DIR_ES}/redelk-elasticsearch/redelk-elasticsearch.key
      - xpack.security.authc.realms.native.redelk.order=1
      - COMPOSE_PROJECT_NAME=redelk
      - CERTS_DIR_ES=${CERTS_DIR_ES}
      - CERTS_DIR_KBN=${CERTS_DIR_KBN}
      - CERTS_DIR_LOGSTASH=${CERTS_DIR_LOGSTASH}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - CREDS_kibana_system=${CREDS_kibana_system}
      - CREDS_logstash_system=${CREDS_logstash_system}
      - CREDS_redelk_ingest=${CREDS_redelk_ingest}
      - CREDS_redelk=${CREDS_redelk}
      - ES_URL=${ES_URL}
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "${LOG_MAX_SIZE}"
        max-file: "${LOG_MAX_FILE}"

  logstash:
    container_name: redelk-logstash
    image: ${REDELKREPO}/redelk-logstash:${REDELKVERSION}
    networks:
      - net
    ports:
      - "5044:5044"
    expose:
      - "9600"
    volumes:
      # Logstash uses 2 sets of TLS certs:
      #  1) the CA and certs generated by the initial-setup.sh script, which is used for outside comm with redirs and C2servers: CERTS_DIR_REDELK
      - ./mounts/logstash-config/certs_inputs:${CERTS_DIR_REDELK}
      #  2) the certs generated by ES for internal comm between ELK components: CERTS_DIR_LOGSTASH
      - ./mounts/certs:${CERTS_DIR_LOGSTASH}
      - ./mounts/redelk-logs:/var/log/redelk
      # Uncomment the line below if you want to insert your own logstash config.
      # Remember that you need to insert a total set of working configs (inputs, filters and outputs).
      # Have a look at docker/redelk-logstash/redelkinstalldata/config/ for working configs
      #- ./mounts/logstash-config/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml
      #- ./mounts/logstash-config/redelk-main:/usr/share/logstash/redelk-main
    environment:
      - node.name=redelk-logstash
      - config.reload.automatic:true
      - CERTS_DIR_REDELK=${CERTS_DIR_REDELK}
      - CERTS_DIR_LOGSTASH=${CERTS_DIR_LOGSTASH}
      - CERTS_LOGSTASH_OUTPUT_CA=${CERTS_LOGSTASH_OUTPUT_CA}
      - CERTS_LOGSTASH_INPUT_KEY=${CERTS_LOGSTASH_INPUT_KEY}
      - CERTS_LOGSTASH_INPUT_CRT=${CERTS_LOGSTASH_INPUT_CRT}
      - CREDS_redelk_ingest=${CREDS_redelk_ingest}
      - XPACK_MONITORING_ENABLED=false
      - XPACK_MONITORING_ELASTICSEARCH_HOSTS=["${ES_URL}"]
      - XPACK_MONITORING_ELASTICSEARCH_USERNAME=logstash_system
      - XPACK_MONITORING_ELASTICSEARCH_PASSWORD=${CREDS_logstash_system}
      - XPACK_MONITORING_ELASTICSEARCH_SSL_CERTIFICATE_AUTHORITY=${CERTS_LOGSTASH_OUTPUT_CA}
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "${LOG_MAX_SIZE}"
        max-file: "${LOG_MAX_FILE}"
    depends_on:
      - elasticsearch

  kibana:
    container_name: redelk-kibana
    image: ${REDELKREPO}/redelk-kibana:${REDELKVERSION}
    networks:
      - net
    expose:
      - "5601"
    volumes:
      - kibana_data:/usr/share/kibana/data
      - ./mounts/certs:${CERTS_DIR_KBN}
    environment:
      - ELASTICSEARCH_HOSTS=${ES_URL}
      - XPACK_SECURITY_ENABLED=true
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${CREDS_kibana_system}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=${CERTS_DIR_KBN}/ca/ca.crt
      - SERVER_SSL_CERTIFICATEAUTHORITIES=${CERTS_DIR_KBN}/ca/ca.crt
      - SERVER_SSL_ENABLED=true
      - SERVER_SSL_CERTIFICATE=${CERTS_DIR_KBN}/redelk-kibana/redelk-kibana.crt
      - SERVER_SSL_KEY=${CERTS_DIR_KBN}/redelk-kibana/redelk-kibana.key
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=${KBN_XPACK_ENCRYPTEDSAVEDOBJECTS}
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "${LOG_MAX_SIZE}"
        max-file: "${LOG_MAX_FILE}"
    depends_on:
      - logstash

  nginx:
    container_name: redelk-nginx
    image: nginx:latest
    networks:
      - net
    volumes:
      - ./mounts/nginx-config:/etc/nginx/templates
      - ./mounts/redelk-www:/var/www/html
      - ${CERTS_DIR_NGINX_LOCAL}:${CERTS_DIR_NGINX}
      - ${CERTS_DIR_NGINX_CA_LOCAL}:${CERTS_DIR_NGINX_CA}
      - ./mounts/certbot/conf:/etc/letsencrypt
      - ./mounts/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    environment:
      - TLS_NGINX_CRT_PATH=${TLS_NGINX_CRT_PATH}
      - TLS_NGINX_KEY_PATH=${TLS_NGINX_KEY_PATH}
      - TLS_NGINX_CA_PATH=${TLS_NGINX_CA_PATH}
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & /docker-entrypoint.d/20-envsubst-on-templates.sh; nginx -g \"daemon off;\"'"
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "${LOG_MAX_SIZE}"
        max-file: "${LOG_MAX_FILE}"

  certbot:
    container_name: redelk-certbot
    image: certbot/certbot
    networks:
      - net
    volumes:
      - ./mounts/certbot/conf:/etc/letsencrypt
      - ./mounts/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "${LOG_MAX_SIZE}"
        max-file: "${LOG_MAX_FILE}"
    depends_on:
      - nginx

  base:
    container_name: redelk-base
    image: ${REDELKREPO}/redelk-base:${REDELKVERSION}
    networks:
      - net
    volumes:
      - ./mounts/redelk-config/etc/cron.d:/etc/cron.d
      - ./mounts/redelk-config/etc/redelk:/etc/redelk
      - ./mounts/redelk-logs:/var/log/redelk
      - ./mounts/redelk-ssh:/home/redelk/.ssh
      - ./mounts/redelk-www/c2logs:/var/www/html/c2logs
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "${LOG_MAX_SIZE}"
        max-file: "${LOG_MAX_FILE}"
    depends_on:
      - nginx
